void LtchMPBttn::updFdaState(){
	switch(_mpbFdaState){
		case stOffNotVPP:
			//In: >>---------------------------------->>
			//Do: >>---------------------------------->>
			if(_validPressPend){
				_isLatched = false;
				_validUnlatchPend = false;
				_mpbFdaState = stOffVPP;
			}
			//Out: >>---------------------------------->>
			break;

		case stOffVPP:
			//In: >>---------------------------------->>
			//Do: >>---------------------------------->>
			if(!_isOn){
				_isOn = true;
				_outputsChange = true;
			}
			_validPressPend = false;
			_mpbFdaState = stOnNVRP;
			//Out: >>---------------------------------->>
			break;

		case stOnNVRP:
			//In: >>---------------------------------->>
			//Do: >>---------------------------------->>
			if(_validReleasePend)
				_mpbFdaState = stOnVRP;
			//Out: >>---------------------------------->>
			break;

		case stOnVRP:
			//In: >>---------------------------------->>
			//Do: >>---------------------------------->>
			_validReleasePend = false;
			if(!_isLatched)
				_isLatched = true;
			_mpbFdaState = stLtchNVUP;
			//Out: >>---------------------------------->>
			break;

		case stLtchNVUP:	//From this state on different unlatch sources might make sense
			//In: >>---------------------------------->>
			//Do: >>---------------------------------->>
			if(_validUnlatchPend){
				_mpbFdaState = stLtchdVUP;
			}
			//Out: >>---------------------------------->>
			break;

		case stLtchdVUP:
			//In: >>---------------------------------->>
			//Do: >>---------------------------------->>
			_mpbFdaState = stOffVUP;
			//Out: >>---------------------------------->>
			break;

		case stOffVUP:
			//In: >>---------------------------------->>
			//Do: >>---------------------------------->>
			_validUnlatchPend = false;	// This is a placeholder for updValidUnlatchStatus() implemented in each subclass
			_mpbFdaState = stOffNVURP;
			//Out: >>---------------------------------->>
			break;

		case stOffNVURP:
			//In: >>---------------------------------->>
			//Do: >>---------------------------------->>
			if(_validReleasePend){
				_mpbFdaState = stOffVURP;
			}
			//Out: >>---------------------------------->>
			break;

		case stOffVURP:
			//In: >>---------------------------------->>
			//Do: >>---------------------------------->>
			_validReleasePend = false;
			if(_isOn){
				_isOn = false;
				_outputsChange = true;
			}
			if(_isLatched)
				_isLatched = false;
			_mpbFdaState = stOffNotVPP;
			//Out: >>---------------------------------->>
			break;

	default:
		break;
	}

	return;
}
